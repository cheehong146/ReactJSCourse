{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/pages/About.js","component/pages/NotFound.js","component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactState","onDeleteClick","delete","onEditClick","_callee2","_context2","_this2","_this$props$contact","className","style","cursor","onClick","color","float","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","About","NotFound","Test","title","body","console","log","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85ab7eb5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id ? (contact) = action.payload : contact\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n            {\r\n                id: 1,\r\n                name: 'John Doe',\r\n                email: 'jdoe@gmail.com',\r\n                phone: '1234123123'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Karen',\r\n                email: 'sdsad@gmail.com',\r\n                phone: '2134543'\r\n            }\r\n            ,\r\n            {\r\n                id: 3,\r\n                name: 'William',\r\n                email: 'William@gmail.com',\r\n                phone: '3152435234'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Kenson',\r\n                email: 'Kenson@gmail.com',\r\n                phone: '15134134321'\r\n            }\r\n        ],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({\r\n            contacts: res.data\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactState: false\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete('https://jsonplaceholder.typicode.com/users/' + id);\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    };\r\n\r\n    onEditClick = async (id, dispatch) => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact;\r\n\r\n        const {showContactState} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className={'card card-body mb-3'}>\r\n                            < h4>\r\n                                {name}\r\n                                <i className={'fas fa-caret-down'} style={{cursor: 'pointer'}}\r\n                                   onClick={() => {\r\n                                       this.setState({\r\n                                           showContactState: !this.state.showContactState\r\n                                       })\r\n                                   }}/>\r\n\r\n                                <i className={'fas fa-times'} style={{color: 'red', float: 'right', cursor: 'pointer'}}\r\n                                   onClick={this.onEditClick.bind(this, id, dispatch)}/>\r\n\r\n                                <Link to={'contact/edit/' + id}>\r\n                                    <i className={'fas fa-pencil-alt'}\r\n                                       style={{color: 'grey', float: 'right', cursor: 'pointer', marginRight: '1rem'}}/>\r\n                                </Link>\r\n                            </h4>\r\n\r\n                            {\r\n                                showContactState ? <ul className={'list-group'}>\r\n                                    <li className={'list-group-item'}>{email}</li>\r\n                                    <li className={'list-group-item'}>{phone}</li>\r\n                                </ul> : null\r\n                            }\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n\r\n};\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>{value => {\r\n                const {contacts} = value;\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact List</span></h1>\r\n                        {contacts.map(contact => (\r\n                            <Contact key={contact.id}\r\n                                     contact={contact}/>\r\n                        ))}\r\n                    </React.Fragment>\r\n                )\r\n            }}</Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Header = props => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className={\"navbar navbar-expand-sm navbar-dark bg-danger mb-3  py-0\"}>\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li><Link to=\"/\" className=\"nav-link\">\r\n                            <i className=\"fas fa-home\">Home</i>\r\n                        </Link></li>\r\n                        <li><Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\">Contact</i>\r\n                        </Link></li>\r\n                        <li><Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\">About</i>\r\n                        </Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classname';\r\n\r\nconst TextInputGroup = ({\r\n                            label,\r\n                            name,\r\n                            value,\r\n                            placeholder,\r\n                            type,\r\n                            onChange,\r\n                            error\r\n                        }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../context\";\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        // check for error\r\n        if (name === '') {\r\n            this.setState({errors: {name: 'Name is required'}})\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({errors: {email: 'Email is required'}})\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({errors: {phone: 'Phone is required'}})\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    {/*name field*/}\r\n                                    <TextInputGroup label={'Name'} onChange={this.onChange} value={name}\r\n                                                    placeholder={'Enter name...'} name={'name'} type={'text'} error={errors.name}/>\r\n\r\n                                    {/*email field*/}\r\n                                    <TextInputGroup label={'Email'} onChange={this.onChange} value={email}\r\n                                                    placeholder={'Enter email...'} name={'email'} type={'email'} error={errors.email}/>\r\n\r\n                                    {/*phone field*/}\r\n                                    <TextInputGroup label={'Phone'} onChange={this.onChange} value={phone}\r\n                                                    placeholder={'Enter phone...'} name={'phone'} type={'text'} error={errors.phone}/>\r\n\r\n                                    {/*submit btn*/}\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../context\";\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users/' + id);\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        // check for error\r\n        if (name === '') {\r\n            this.setState({errors: {name: 'Name is required'}})\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({errors: {email: 'Email is required'}})\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({errors: {phone: 'Phone is required'}})\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name: name,\r\n            email: email,\r\n            phone: phone\r\n        };\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put('https://jsonplaceholder.typicode.com/users/' + id, updateContact);\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: res.data\r\n        });\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Edit Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    {/*name field*/}\r\n                                    <TextInputGroup label={'Name'} onChange={this.onChange} value={name}\r\n                                                    placeholder={'Enter name...'} name={'name'} type={'text'}\r\n                                                    error={errors.name}/>\r\n\r\n                                    {/*email field*/}\r\n                                    <TextInputGroup label={'Email'} onChange={this.onChange} value={email}\r\n                                                    placeholder={'Enter email...'} name={'email'} type={'email'}\r\n                                                    error={errors.email}/>\r\n\r\n                                    {/*phone field*/}\r\n                                    <TextInputGroup label={'Phone'} onChange={this.onChange} value={phone}\r\n                                                    placeholder={'Enter phone...'} name={'phone'} type={'text'}\r\n                                                    error={errors.phone}/>\r\n\r\n                                    {/*submit btn*/}\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-light\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to  manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404 Not Found</span></h1>\r\n            <p className=\"lead\">Sorry that page does not exist</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title : '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }));\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        const {title, body} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <h4 className=\"diplay-1\">{title}</h4>\r\n                <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Test;","import React, {Component} from 'react';\nimport './App.css';\nimport Contacts from './component/contacts/Contacts';\nimport Header from './component/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from './context';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport About from './component/pages/About';\nimport NotFound from './component/pages/NotFound';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Test from \"./component/test/Test\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className='App'>\n                        <Header branding='Contact Managers'/>\n                        <div className='container'>\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts}></Route>\n                                <Route exact path=\"/contact/add\" component={AddContact}></Route>\n                                <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n                                <Route exact path=\"/about\" component={About}></Route>\n                                <Route exact path=\"/test\" component={Test}></Route>\n                                <Route component={NotFound}></Route>\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}